# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

## The component representation of a 3D node
## 
## @name node3.vwf
## @namespace

---

properties:

  animation-time:
    set: |
      if ( this["animation-playing"] ) {
        this["animation-private"].start_time = this.time - value / this["animation-rate"];  // TODO: range limit
      } else if ( this["animation-paused"] ) {
        this["animation-private"].start_time  = this["animation-private"].pause_time - value / this["animation-rate"];  // TODO: range limit
      } else if ( this["animation-stopped"] ) {  // TODO?
        this["animation-private"].start_time = this.time - value / this["animation-rate"];  // TODO: range limit
        this["animation-private"].pause_time = this.time;
      }
    get: |
      if ( this["animation-playing"] ) {
        return ( this.time - this["animation-private"].start_time ) * this["animation-rate"];
      } else if ( this["animation-paused"] ) {
        return ( this["animation-private"].pause_time - this["animation-private"].start_time ) * this["animation-rate"];
      } else if ( this["animation-stopped"] ) {
        return 0;
      }

  animation-duration: 1

  animation-rate: 1  # TODO: set/get
  animation-loop: false

  animation-playing:
    set: |
    get: |
      return !! this["animation-private"].start_time && ! this["animation-private"].pause_time;
  animation-paused: 
    set: |
    get: |
      return !! this["animation-private"].start_time && !! this["animation-private"].pause_time;
  animation-stopped: 
    set: |
    get: |
      return ! this["animation-private"].start_time;

  animation-private:  # TODO: record as changed on update
    start_time: null
    pause_time: null

methods:

  animation-play: |

    // this.time = 0;
    // this.playing = true;

    if ( ! this["animation-private"].start_time ) {
      this["animation-private"].start_time = this.time;
      this["animation-private"].pause_time = null;
    }

  animation-pause: |

    // this.playing = false;

    if ( this["animation-private"].start_time && ! this["animation-private"].pause_time ) {
      this["animation-private"].pause_time = this.time;
    }

  animation-resume: |

    // this.playing = true;

    if ( this["animation-private"].start_time && this["animation-private"].pause_time ) {
      this["animation-private"].start_time += this.time - this["animation-private"].pause_time;
      this["animation-private"].pause_time = null;
    }

  animation-stop: |

    // this.playing = false;
    // this.time = 0;

    if ( this["animation-private"].start_time ) {
        this["animation-private"].start_time = null;
        this["animation-private"].pause_time = null;
    }

  animation-update: |
    // TODO

events:
  animation-started:
  animation-stopped:
  animation-looped:























