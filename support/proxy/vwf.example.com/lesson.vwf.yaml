# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

## The component representation of a lesson
## 
## @name lesson.vwf
## @namespace

--- 
extends: http://vwf.example.com/instruction.vwf
properties: 

  ## The active instruction
  ## 
  ## @name lesson.vwf#activeInstruction
  ## @property

  activeInstruction:
    set: |
      this.activeInstruction = value;
    value: false

  ## Index value for the instruction
  ## 
  ## @name lesson.vwf#instructionIndex
  ## @property

  instructionIndex:
    set: |
      this.instructionIndex = value;
    value: 0

methods:

  ## On entry function
  ## 
  ## @name lesson.vwf#onEntry
  ## @function
  ##
  ## @returns undefined

  onEntry:

  ## Next instruction
  ## 
  ## @name lesson.vwf#nextInstruction
  ## @function
  ##
  ## @returns undefined

  nextInstruction:

  ## Activate next
  ## 
  ## @name lesson.vwf#activateNext
  ## @function
  ##
  ## @returns undefined

  activateNext:

  ## Instruction success
  ## 
  ## @name lesson.vwf#instructionSuccess
  ## @function
  ##
  ## @returns undefined

  instructionSuccess:

scripts:
- |
    this.onEntry = function() {
      if ( this.instructions && this.instructions.length ) {
        this.instructionIndex = 0;
        this.activeInstruction = this.instructions[this.instructionIndex];
      }
    }
    this.nextInstruction(){
      this.instructionIndex = this.instructionIndex + 1;
    }
    this.activateNext = function() {
      this.activeInstruction = this.instructions[this.instructionIndex];
      this.activeInstruction.onEntry();
    }
    this.instructionSuccess = function() {
      this.activeInstruction.success = true;
      this.nextInstruction();
      if ( this.instructionIndex >= this.instructions.length ) {
        this.success = true;
      } else {
        activateNext();
      }
    }
